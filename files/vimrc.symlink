
syntax on
filetype plugin on
filetype indent on

set t_Co=256

" display number on left side and status bar
set ruler
set number
set norelativenumber

" monitor file changes
set autoread

" case
set ignorecase
set smartcase

" let me change buffers when mod
set hidden

" look for files recursively
set path+=**

" set spell by default, in code it applies to comments
" set spell

" display statusbar
set laststatus=2

" enable mouse
set mouse=a

" indents
set autoindent
set smartindent

" set shell
set shell=/bin/bash

" encoding
set encoding=utf-8
set fileencoding=utf-8
scriptencoding utf-8

" lines from cursor to bottom
set scrolloff=10

set wildmode=list:longest,full
set wildmenu
set wildignore=*~,*.o
set wildignore+=*DS_Store*
set wildignore+=*.pyc

" decent backspace
set backspace=indent,eol,start

" when searching
set showmatch
set incsearch
" set nohlsearch
set hlsearch

" annoying sounds
set noerrorbells
set visualbell
set t_vb=

" set clipboard=unnamedplus

" on splits
set splitright
set splitbelow

" default file format
set fileformats=unix,mac,dos

" fold enabled
set foldmethod=indent
set foldlevel=5

set textwidth=120        " more realistic size
set colorcolumn=0

" Tabs
set tabstop=2
set shiftwidth=2
set expandtab

" Wrap
set wrap
set linebreak
set showbreak=↪

set ttyfast
set title

set showcmd
set showmode

" invisible chars
set list
" set listchars=tab:▸\ ,eol:¬,trail:·,nbsp:·,space:·
set listchars=tab:▸\ ,trail:·,nbsp:·



" Plugins to install {{{
call plug#begin('~/.vim/plugged')
Plug 'nvim-lua/plenary.nvim'
Plug 'nvim-telescope/telescope.nvim', { 'tag': '0.1.1' }
Plug 'mhinz/vim-startify'
Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
Plug 'nvim-tree/nvim-web-devicons'
Plug 'nvim-lualine/lualine.nvim'
call plug#end()

augroup default
  au User Startified normal! zR
  au VimResized * :wincmd =
augroup END


" Python section
augroup mypython
au!
au FileType python setl tabstop=4
au FileType python setl softtabstop=4
au FileType python setl shiftwidth=4
au FileType python setl textwidth=180
au FileType python setl expandtab
au FileType python setl autoindent
au FileType python setl fileformat=unix
augroup end

" Terraform section
augroup myterraform
au!
au FileType terraform setl expandtab     " Use spaces instead of tabs.
au FileType terraform setl tabstop=2     " A tab counts for 4 spaces.
au FileType terraform setl softtabstop=2 " Causes backspace to delete 4 spaces.
au FileType terraform setl shiftwidth=2  " Shift by 4 spaces.
au FileType terraform setl foldmethod=indent " fold method is indent for terraform
au FileType terraform setl foldlevel=2 " fold method is indent for terraform
au FileType terraform setl fileformat=unix
augroup end

" Git commits
augroup mygitcommit
au!
au FileType gitcommit setl spell     " Enable spellchecking.
au FileType gitcommit setl expandtab " Use spaces instead of tabs.
augroup end

" Markdown
augroup mymarkdown
au!
au FileType markdown setl spell         " Enable spellchecking.
au FileType markdown setl expandtab     " Use spaces instead of tabs.
au FileType markdown setl tabstop=2     " Lists are indented with 2 spaces.
au FileType markdown setl softtabstop=2 " Causes backspace to delete 2 spaces.
au FileType markdown setl shiftwidth=2  " Shift by 2 spaces.
augroup end

" Reopen the last edited position in files
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif

" Theme configuration
let g:solarized_termcolors=256
set background=dark


" highlight ColorColumn guibg=#2d2d2d ctermbg=246
" highlight Normal ctermfg=grey ctermbg=#0e143d

" also respect the transparency of the terminal
highlight Normal guibg=NONE ctermbg=NONE

" enable italic comments
highlight Comment cterm=italic gui=italic

" highligh current row and column
set cursorline
" set cursorcolumn

try
    " colorscheme slate
    " colorscheme industry
    " colorscheme koehler
    colorscheme solarized
    " colorscheme torte
    " colorscheme dracula
    " colorscheme nova
    " colorscheme morning
    " colorscheme darkblue
catch
    colorscheme default
endtry

" enable transparent vim
hi Normal guibg=NONE ctermbg=NONE

" Mappings

imap jk <Esc>

let mapleader = " "

nnoremap <Leader>w :w<CR>
nnoremap <Leader>q :q<CR>
nnoremap <Leader>b :NERDTreeToggle<CR>

map <Leader>h <C-w>h
map <Leader>j <C-w>j
map <Leader>k <C-w>k
map <Leader>l <C-w>l

" I want it to work on all modes
map <C-l> :buffers<CR>

imap <C-]> <ESC>
